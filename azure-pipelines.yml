# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: Job1
        steps:
          - bash: echo Build First Job
          - bash: echo $(PipeLineLevelVariable)
          - bash: echo $(Build.BuildId)
          - bash: echo $(Build.BuildNumber)
          - bash: echo $(Build.SourceBranchName)
          - bash: echo $(Build.SourcesDirectory)
          - bash: echo $(System.DefaultWorkingDirectory)
          - bash: ls -R $(System.DefaultWorkingDirectory)
          - bash: java -version
          - bash: python --version
          - bash: node --version
          - bash: mvn -version
          - bash: ls -R $(Build.ArtifactStagingDirectory)
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: |
                **/*.yml
                **/*.tf
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
              
          - bash: ls -R $(Build.ArtifactStagingDirectory)
            


      # - job: Job2
      #   steps:
      #     - bash: echo Job2 Stage1
  # - stage: DevDeploy
  #   dependsOn: Build
  #   variables:
  #     environment: Dev
  #   jobs:
  #     - job: DevDeploy
  #       steps:
  #         - bash: echo $(environment)DeployJob
  #           displayName: "Running Dev Deploy"
  # - stage: QADeploy
  #   dependsOn: Build
  #   variables:
  #     e2: QA
  #   jobs:
  #     - job: QADeploy
  #       steps:
  #         - bash: echo $(e2)DeployJob
  #           displayName: "Running QA Deploy"
  # - stage: ProdDeploy
  #   dependsOn:
  #   - DevDeploy
  #   - QADeploy
  #   variables:
  #     e3: Prod
  #   jobs:
  #     - job: ProdDeploy
  #       steps:
  #         - bash: echo $(e3)DeployJob
  #           displayName: "Running Prod Deploy"
